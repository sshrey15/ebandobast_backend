
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Admin {
  id        String   @id @default(uuid())
  name      String
  phone     String   @unique
  batchId   String   @unique
  rank      String
  policeStationId String
  policeStation PoliceStation @relation(fields: [policeStationId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  meetingsCreated Meeting[] @relation("MeetingsCreated")
  meetingsReceived Meeting[] @relation("MeetingsReceived")
}


model DutyOfficer {
  id        String   @id @default(uuid())
  name String
  phone     String   @unique
  batchId   String     @unique
  policeStationId String
  rank String
  policeStation PoliceStation @relation(fields: [policeStationId], references: [id])
  
  joinBandobast joinBandobast[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model PoliceStation {
  id       String   @id @default(uuid())
  name     String   @unique
  location String
  DutyOfficer DutyOfficer[]
  Admin    Admin[]
  createdAt DateTime @default(now())
}

model Bandobast {
  id             String   @id @default(uuid())
  name           String
  date           DateTime
  location       String
  description    String
  alertInfo      alertInfo[]
  joinBandobast joinBandobast[]
  bandobastAssignment BandobastAssignment[]
  coordinates coordinates[]
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
}


model alertInfo {
  id       String   @id @default(uuid())
  description String
  imgURL      String[]
  location    String
  bandobastId String
  bandobast Bandobast @relation(fields: [bandobastId], references: [id])
  patrolId String
  patrol Patrolling @relation(fields: [patrolId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}






model BandobastAssignment {
  id                String   @id @default(uuid())
  teamName           String  
  officerName       String
  mobileNumber      String
  supervisionOfficer String
  charterOfDuty     String
  startTime         DateTime
  endTime           DateTime
  date             DateTime
  callSign          String
  bandobastId       String
  bandobast         Bandobast @relation(fields: [bandobastId], references: [id])
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
}


model coordinates {
  id        String   @id @default(uuid())
  teamName  String
  latitude1  Float
  longitude1 Float
  latitude2  Float
  longitude2 Float
  latitude3  Float
  longitude3 Float
  latitude4  Float
  longitude4 Float
  bandobastId String
  bandobast Bandobast @relation(fields: [bandobastId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}


model joinBandobast {
  id        String   @id @default(uuid())
  bandobastId String
  bandobast Bandobast @relation(fields: [bandobastId], references: [id])
  dutyOfficerId String
  dutyOfficer DutyOfficer @relation(fields: [dutyOfficerId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}


model Patrolling {
  id String @id @default(uuid())
  name String 
  route String[]
  alertInfo alertInfo[]
  vehicleNumber String
  numofOfficers Int
  patrolOfficers String[]
  supervisor String
  date DateTime
  startTime DateTime
  endTime DateTime
  description String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}


model FoodVendor {
  id String @id @default(uuid())
  name String
  phone String @unique
  location String
  food Food[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Food {
  id String @id @default(uuid())
  name String
  description String
  price Int
  imgURL String
  foodVendorId String
  foodVendor FoodVendor @relation(fields: [foodVendorId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}


model Meeting {
  id String @id @default(uuid())
  creatorId String
  creator Admin @relation("MeetingsCreated", fields: [creatorId], references: [id])
  receiverId String
  receiver Admin @relation("MeetingsReceived", fields: [receiverId], references: [id])
  name String
  date DateTime
  time DateTime
  location String
  agenda String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}









